---
apiVersion: v1
kind: Service
metadata:
  name: arbitr-api
  labels:
    team: elite
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: arbitr-api
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: arbitr-ingress
  labels:
    team: elite
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: arbitr-api
              servicePort: 80
            path: "/arbitr(/|$)(.*)"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arbitr-api
  labels:
    team: elite
spec:
  selector:
    matchLabels:
      run: arbitr-api
  replicas: 1
  template:
    metadata:
      labels:
        run: arbitr-api
        echo.com/servicetype: api
        team: elite
    spec:
      containers:
      - name: arbitr-api-container
        image: skaffold-dev/arbitr.api:latest
        resources:
          requests:
            memory: "512Mi"
            cpu: "10m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        envFrom:
        - configMapRef:
            name: arbitr-config
        - secretRef:
            name: arbitr-secret
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /_health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 4
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /_health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 4
          timeoutSeconds: 3
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostNetwork: false
---
